@startuml
enum UserActions {
    MOVE_RIGHT,
    MOVE_LEFT,
    MOVE_UP,
    MOVE_DOWN,
    SHOOT,
    PAUSE,
}
class InputManager <<static>> {
    - {static} KEYBINDINGS_PATH : string
    + {method} {static} ActiveInputs : bool[]
    + {method} {static} InstantInputs : bool[]
    + {static} InitializeInputs(window:RenderWindow) : void
    + {static} Update() : void
    + {static} GetKey(action:UserActions) : Keyboard.Key?
    - {static} RecordKeyToString(e: KeyEventArgs) : void
    + {static} StartStringInput(window: RenderWindow) : void
    + {static} EndStringInput(window: RenderWindow) : void
    + {static} GetInputString() : string
    - {static} SaveKeyBindings(bindings: Keyboard.Key[]) : void
    - {static} LoadKeyBindings() : Keyboard.Key[]?
}
InputManager "1" *-> UserActions
@enduml
