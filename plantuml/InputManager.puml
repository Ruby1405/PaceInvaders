@startuml
enum UserActions {
    MOVE_RIGHT,
    MOVE_LEFT,
    MOVE_UP,
    MOVE_DOWN,
    SHOOT,
    PAUSE,
}
class InputManager <<static>> {
    - {static} KEYBINDINGS_PATH : string
    - {static} alphaNumericRegex : Regex {readOnly}
    - {static} inputKeys : Keyboard.Key[]
    - {static} inputString : string
    - {static} window : RenderWindow
    + {method} {static} ActiveInputs : bool[]
    + {method} {static} InstantInputs : bool[]
    + {static} InitializeInputs(window:RenderWindow) : void
    + {static} Update() : void
    + {static} GetKey(action:UserActions) : Keyboard.Key?
    - {static} RecordTextInput(e: TextEventArgs) : void
    + {static} StartTextInput() : void
    + {static} EndTextInput() : void
    + {static} GetInputString() : string
    - {static} SaveKeyBindings() : void
    - {static} LoadKeyBindings() : Keyboard.Key[]?
}
InputManager "1" *-> UserActions
@enduml
